#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.7.0.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 35 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 18 #"java-comment-box%\0"
1 0 23 #"java-interactions-box%\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 7 #"mycirc\0"
0 0 1 6 #"wxloc\0"
          0 0 75 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 34
#"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 33
#"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 607 0 28 3 22 #"#lang scribble/sigplan"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"require"
0 0 24 3 1 #"["
0 0 14 3 17 #"scriblib/footnote"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"scriblib/figure"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 10 #"\"pictures."
0 0 29 3 3 #"rkt"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 5 #"\"bib."
0 0 29 3 3 #"rkt"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 1 #"\""
0 0 29 3 5 #"utils"
0 0 19 3 1 #"."
0 0 29 3 3 #"rkt"
0 0 19 3 1 #"\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 5 #"title"
0 0 24 3 1 #"["
0 0 23 3 5 #"#:tag"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"introduction\""
0 0 24 3 2 #"]{"
0 0 29 3 5 #"Iavor"
0 0 20 3 1 #" "
0 0 29 3 8 #"Diatchki"
0 0 20 3 22 #" and Conference Videos"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"This section describes the process of editing a conference"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"videos, how it can be repetitive, and that it should be"
0 0 24 29 1 #"\n"
0 0 20 3 9 #"scripted."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"@;"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"Interactive video editing is primarily done by tools called"
0 0 24 29 1 #"\n"
0 0 20 3 24 #"non-linear video editors"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 26 #"technique-of-video-editing"
0 0 24 3 1 #"]"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 20 3 35 #"In the context of film production, "
0 0 24 3 1 #"@"
0 0 14 3 4 #"emph"
0 0 24 3 1 #"{"
0 0 20 3 10 #"non-linear"
0 0 24 3 1 #"}"
0 0 20 3 6 #" means"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"not destructive, the source videos will not slowly degrade"
0 0 24 29 1 #"\n"
0 0 20 3 26 #"in quality during editing."
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 1 #"{"
0 0 20 3 28 #"Digital editors achieve this"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 56 #"result by operating on references to videos, rather than"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 35 #"operating on the videos themselves."
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 20 3 32 #"A non-linear video editor, shown"
0 0 24 29 1 #"\n"
0 0 20 3 3 #"in "
0 0 24 3 1 #"@"
0 0 14 3 10 #"figure-ref"
0 0 24 3 1 #"{"
0 0 29 3 4 #"nlve"
0 0 20 3 5 #"-demo"
0 0 24 3 1 #"}"
0 0 20 3 29 #", is a graphical tool with a "
0 0 24 3 1 #"@"
0 0 14 3 4 #"emph"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 9 #"time line"
0 0 24 3 1 #"}"
0 0 20 3 14 #" comprised of "
0 0 24 3 1 #"@"
0 0 14 3 4 #"emph"
0 0 24 3 1 #"{"
0 0 20 3 6 #"tracks"
0 0 24 3 1 #"}"
0 0 20 3 19 #". Each track stores"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"video and audio clips. Finally, filters and transitions"
0 0 24 29 1 #"\n"
0 0 20 3 16 #"indicate how to "
0 0 24 3 1 #"@"
0 0 14 3 4 #"emph"
0 0 24 3 1 #"{"
0 0 20 3 9 #"composite"
0 0 24 3 1 #"}"
0 0 20 3 27 #" videos, or how the various"
0 0 24 29 1 #"\n"
0 0 20 3 34 #"clips should be combined together."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"Video editing, while creative, is often a repetitive task."
0 0 24 29 1 #"\n"
0 0 20 3 59
#"For example, putting conference videos together often takes"
0 0 24 29 1 #"\n"
0 0 20 3 24 #"a significant amount of "
0 0 29 3 10 #"repetative"
0 0 20 3 23 #" manual effort. Editing"
0 0 24 29 1 #"\n"
0 0 20 3 30 #"each conference talk involves "
0 0 29 3 11 #"compositing"
0 0 20 3 19 #" a camera feed with"
0 0 24 29 1 #"\n"
0 0 20 3 49 #"a screen capture feed and one for audio capture. "
0 0 29 3 11 #"Compositing"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"these feeds takes several steps, each feed must be shrunk"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"and placed on the appropriate part of the screen and be"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"synchronized, one at a time. On top of all of this, each"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"video also includes the conference logo at the start and end"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"of the video, and include a watermark throughout the video."
0 0 24 29 1 #"\n"
0 0 20 3 5 #"Each "
0 0 29 3 10 #"composited"
0 0 20 3 42 #" feed only takes a few mouse clicks to set"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"up, but each feed must be set up individually. Additionally,"
0 0 24 29 1 #"\n"
0 0 20 3 50 #"the application must process each clip after every"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"operation, requiring more time. In aggregate, this process"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"become a large task. Worse still, this entire process is"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"repeated for every video, significantly increasing the work"
0 0 24 29 1 #"\n"
0 0 20 3 5 #"load."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"Professionals have developed tools and design patterns to"
0 0 24 29 1 #"\n"
0 0 20 3 53 #"reduce the amount of repetitive manual labor in video"
0 0 24 29 1 #"\n"
0 0 20 3 39 #"editing. They frequently develop macros"
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 1 #"{"
0 0 20 3 14 #"In the context"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 57 #"of video editing, a macro is a series of buttons that are"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 34 #"automatically pressed in sequence."
0 0 24 3 1 #"}"
0 0 20 3 21 #" using languages like"
0 0 24 29 1 #"\n"
0 0 29 3 11 #"AppleScript"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 16 #"applescript-hopl"
0 0 24 3 1 #"]"
0 0 20 3 19 #" for the tools they"
0 0 24 29 1 #"\n"
0 0 20 3 4 #"use."
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 19 #"applescript-use-url"
0 0 24 3 1 #"}"
0 0 20 3 29 #" Most professional tools, and"
0 0 24 29 1 #"\n"
0 0 20 3 34 #"some casual ones, even include an "
0 0 29 3 3 #"API"
0 0 20 3 23 #" to create new plugins."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"Unfortunately, existing means of extending these tools are"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"insufficient. Macros are extremely brittle, and frequently"
0 0 24 29 1 #"\n"
0 0 20 3 53 #"break, even from version to version of the same video"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"editor. Using a tool's official plug-in interface is more"
0 0 24 29 1 #"\n"
0 0 20 3 52 #"robust, but is still tied specifically to that tool."
0 0 24 29 1 #"\n"
0 0 20 3 7 #"Blender"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 17 #"essential-blender"
0 0 24 3 1 #"]"
0 0 20 3 21 #" for example, is only"
0 0 24 29 1 #"\n"
0 0 29 3 10 #"scriptable"
0 0 20 3 50 #" with a modified Python interpreter that runs when"
0 0 24 29 1 #"\n"
0 0 20 3 20 #"Blender is launched."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 51 #"Another alternative is a general purpose multimedia"
0 0 24 29 1 #"\n"
0 0 20 3 18 #"framework such as "
0 0 29 3 9 #"GStreamer"
0 0 20 3 1 #","
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 13 #"gstreamer-url"
0 0 24 3 1 #"}"
0 0 20 3 8 #" or the "
0 0 29 3 3 #"MLT"
0 0 24 29 1 #"\n"
0 0 20 3 10 #"Framework."
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 7 #"mlt-url"
0 0 24 3 1 #"}"
0 0 20 3 22 #" These frameworks are "
0 0 29 3 4 #"APIs"
0 0 20 3 6 #" for C"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"style languages that provide data types for building and"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"rendering videos. These frameworks are powerful enough that"
0 0 24 29 1 #"\n"
0 0 20 3 34 #"video editing applications such as"
0 0 24 29 1 #"\n"
0 0 29 3 7 #"Shotcut"
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 11 #"shotcut-url"
0 0 24 3 1 #"}"
0 0 20 3 34 #" use them as a supporting library."
0 0 24 29 1 #"\n"
0 0 20 3 55 #"The appeal of these frameworks is the ability to create"
0 0 24 29 1 #"\n"
0 0 20 3 52 #"abstractions, such as functions, to handle otherwise"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"repetitive tasks. For example, a professional using one of"
0 0 24 29 1 #"\n"
0 0 20 3 48 #"these frameworks can write a function to do the "
0 0 29 3 11 #"composeting"
0 0 24 29 1 #"\n"
0 0 20 3 33 #"for a video of a conference talk."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 51 #"Unfortunately, media frameworks for general purpose"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"languages introduce a new set of problems when used directly"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"for video editing. Anyone using them must focus on managing"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"the language rather than the actual video being created."
0 0 24 29 1 #"\n"
0 0 20 3 57 #"Design patterns reduces time spent managing the language,"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"but even that is a distraction from editing videos. Imagine"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"if authors tried to write a paper with Java rather than"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 5 #"exact"
0 0 24 3 1 #"{"
0 0 20 3 1 #"\\"
0 0 29 3 5 #"LaTeX"
0 0 24 3 1 #"}"
0 0 20 3 22 #". Even if they had an "
0 0 29 3 3 #"API"
0 0 20 3 13 #" for document"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"writing, they would still spend a large portion of their"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"time managing the Java part of their work. Somewhere in"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"their project, they would still need to have a main class,"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"main function, create a document object, design a nice way"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"to imperatively add elements to the document object, and"
0 0 24 29 1 #"\n"
0 0 20 3 48 #"eventually render the document object. Thus, an "
0 0 29 3 3 #"API"
0 0 20 3 7 #" is not"
0 0 24 29 1 #"\n"
0 0 20 3 39 #"adequate for interactive video editing."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 6 #"figure"
0 0 24 3 1 #"["
0 0 19 3 1 #"\""
0 0 29 3 4 #"nlve"
0 0 19 3 6 #"-demo\""
0 0 24 3 1 #" "
0 0 19 3 54 #"\"A Non-linear Video Editor, part of the Blender suite\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" @"
0 0 14 3 11 #"nlve-sample"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 54 #"Another alternative is to use existing domain-specific"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"languages for video editing, which fall into one of two"
0 0 24 29 1 #"\n"
0 0 20 3 40 #"categories. The first type is XML based "
0 0 29 3 4 #"DSLs"
0 0 20 3 9 #" such as "
0 0 29 3 3 #"MLT"
0 0 24 29 1 #"\n"
0 0 20 3 3 #"XML"
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 11 #"mlt-xml-url"
0 0 24 3 1 #"}"
0 0 20 3 23 #" and the now deprecated"
0 0 24 29 1 #"\n"
0 0 29 3 4 #"SMIL"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 7 #"smil-tr"
0 0 24 3 1 #"]"
0 0 20 3 39 #". The second type is scripting language"
0 0 24 29 1 #"\n"
0 0 20 3 6 #"based "
0 0 29 3 4 #"DSLs"
0 0 20 3 9 #" such as "
0 0 29 3 8 #"AVISynth"
0 0 20 3 1 #"."
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 12 #"avisynth-url"
0 0 24 3 1 #"}"
0 0 20 3 11 #" Both types"
0 0 24 29 1 #"\n"
0 0 20 3 52 #"are better suited for interactive video editing, but"
0 0 24 29 1 #"\n"
0 0 20 3 31 #"have their own set of problems."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 21 #"XML allows people to "
0 0 29 3 13 #"declaratively"
0 0 20 3 20 #" express videos, but"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"removes the ability to make new procedures. The lack of"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"abstractions is adequate for storing a video representation,"
0 0 24 29 1 #"\n"
0 0 20 3 52 #"but not for interactive video editing. Using the XML"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"processing capabilities of another language that does have"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"abstractions is not an option, because this leads back to"
0 0 24 29 1 #"\n"
0 0 20 3 52 #"the problem of managing either a generic programming"
0 0 24 29 1 #"\n"
0 0 20 3 43 #"language or an XML processing language like"
0 0 24 29 1 #"\n"
0 0 29 3 4 #"XSLT"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 7 #"xslt-tr"
0 0 24 3 1 #"]"
0 0 20 3 41 #". Worse still, the XML facilities in most"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"programming languages are designed to process generic XML"
0 0 24 29 1 #"\n"
0 0 20 3 53 #"files. For this reason, XML style languages for video"
0 0 24 29 1 #"\n"
0 0 20 3 51 #"editing are frequently used only by enthusiasts and"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"tinkerers, who are more interested in playing with video"
0 0 24 29 1 #"\n"
0 0 20 3 46 #"editor technology than actually editing videos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 39 #"In principle, scripting language style "
0 0 29 3 4 #"DSLs"
0 0 20 3 23 #" are the right approach"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"for video editing, but current languages fail here. These"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"languages allow for some abstraction, but are not robust"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"enough for anything but simple tasks. Additionally, these"
0 0 24 29 1 #"\n"
0 0 20 3 21 #"languages have an ad-"
0 0 29 3 3 #"hoc"
0 0 20 3 35 #" grammar, making robust use of them"
0 0 24 29 1 #"\n"
0 0 20 3 21 #"even more difficult. "
0 0 29 3 8 #"AVISynth"
0 0 20 3 21 #", for example, allows"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"programmers to create simple functions, but lacks control"
0 0 24 29 1 #"\n"
0 0 20 3 46 #"flow constructs such as conditional branching."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"An ideal environment for video editing includes the power of"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"a programming language, without losing the best parts of a"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"traditional non-linear video editor. Its users must be able"
0 0 24 29 1 #"\n"
0 0 20 3 54 #"to describe the video without managing a program, in a"
0 0 24 29 1 #"\n"
0 0 20 3 19 #"similar fashion to "
0 0 24 3 1 #"@"
0 0 14 3 5 #"exact"
0 0 24 3 1 #"{"
0 0 20 3 1 #"\\"
0 0 29 3 5 #"LaTeX"
0 0 24 3 1 #"}"
0 0 20 3 3 #" or"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Scribble"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 13 #"scribble-icfp"
0 0 24 3 1 #"]"
0 0 20 3 29 #". Video objects must be first"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"class, and in general they also need linguistic support. The"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"language must also be able to use more powerful linguistic"
0 0 24 29 1 #"\n"
0 0 20 3 58
#"constructs when useful. Finally, the programming mechanism"
0 0 24 29 1 #"\n"
0 0 20 3 29 #"it provides should not be ad-"
0 0 29 3 3 #"hoc"
0 0 20 3 15 #". A functional "
0 0 29 3 3 #"DSL"
0 0 20 3 5 #" that"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"offers a certain amount of literate programming can solve"
0 0 24 29 1 #"\n"
0 0 20 3 18 #"these constraints."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 5 #"Video"
0 0 24 3 1 #"}"
0 0 20 3 19 #" is a Racket based "
0 0 29 3 3 #"DSL"
0 0 20 3 19 #" for video editing."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 5 #"Users"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"can express their videos without having to handle all of the"
0 0 24 29 1 #"\n"
0 0 20 3 56 #"boilerplate of setting up maintaining a video object and"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"rendering code. Rather, programs in Video are declarative"
0 0 24 29 1 #"\n"
0 0 20 3 24 #"descriptions of a video."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 31 #"Additionally, if a tasks become"
0 0 24 29 1 #"\n"
0 0 20 3 52 #"repetitive, they have access to Racket's abstraction"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"facilities. This technique proves useful for editing many"
0 0 24 29 1 #"\n"
0 0 20 3 54 #"videos that have similar templates, but are not always"
0 0 24 29 1 #"\n"
0 0 20 3 44 #"identical, such as conference recordings or "
0 0 29 3 11 #"screencasts"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 53 #"Video is also able to leverage the Racket programming"
0 0 24 29 1 #"\n"
0 0 20 3 12 #"environment "
0 0 29 3 8 #"DrRacket"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 7 #"plt-tr2"
0 0 24 3 1 #"]"
0 0 20 3 14 #" and graphical"
0 0 24 29 1 #"\n"
0 0 29 3 8 #"toolkits"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 7 #"plt-tr3"
0 0 24 3 1 #"]"
0 0 20 3 33 #". Broadly speaking, video editors"
0 0 24 29 1 #"\n"
0 0 20 3 51 #"benefit from what you see is what you get (WYSIWYG)"
0 0 24 29 1 #"\n"
0 0 20 3 14 #"environments. "
0 0 29 3 8 #"DrRacket"
0 0 20 3 33 #" enables Video to allow to enable"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"WYSIWYG video editing when it is appropriate, and textual"
0 0 24 29 1 #"\n"
0 0 20 3 57 #"editing when beneficial. Racket also contains an existing"
0 0 24 29 1 #"\n"
0 0 29 3 3 #"API"
0 0 20 3 22 #" for creating pictures"
0 0 24 3 1 #"@"
0 0 14 3 4 #"cite"
0 0 24 3 1 #"["
0 0 14 3 13 #"slideshow-jfp"
0 0 24 3 1 #"]"
0 0 20 3 4 #" and"
0 0 24 29 1 #"\n"
0 0 20 3 6 #"sounds"
0 0 24 3 1 #"@"
0 0 14 3 4 #"note"
0 0 24 3 2 #"{@"
0 0 14 3 10 #"rsound-url"
0 0 24 3 1 #"}"
0 0 20 3 25 #" that Video can leverage."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 60
#"This paper describes the design and implementation of Video."
0 0 24 29 1 #"\n"
0 0 20 3 36 #"We introduce the design of Video in "
0 0 24 3 1 #"@"
0 0 14 3 6 #"secref"
0 0 24 3 1 #"["
0 0 19 3 10 #"\"overview\""
0 0 24 3 1 #"]"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 20 3 6 #"Next, "
0 0 24 3 1 #"@"
0 0 14 3 6 #"secref"
0 0 24 3 1 #"["
0 0 19 3 16 #"\"implementation\""
0 0 24 3 1 #"]"
0 0 20 3 23 #" discusses how Video is"
0 0 24 29 1 #"\n"
0 0 20 3 16 #"implemented. In "
0 0 24 3 1 #"@"
0 0 14 3 6 #"secref"
0 0 24 3 1 #"["
0 0 19 3 12 #"\"extensions\""
0 0 24 3 1 #"]"
0 0 20 3 21 #" we discuss graphical"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"extensions to video to aid in editing, and how it fits into"
0 0 24 29 1 #"\n"
0 0 29 3 10 #"DrRacket's"
0 0 20 3 47 #" work flow. We compare Video to related work in"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 6 #"secref"
0 0 24 3 1 #"["
0 0 19 3 9 #"\"related\""
0 0 24 3 1 #"]"
0 0 20 3 24 #" and finally conclude in"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 6 #"secref"
0 0 24 3 1 #"["
0 0 19 3 12 #"\"conclusion\""
0 0 24 3 1 #"]"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0           0
